name: Build AWS Data Curator

on:
  push:
    branches: [ main, dev/boto3 ]
  release:
    types: [ published ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r aws/requirements.txt
        pip install pyinstaller
    
    - name: Build AWS app
      run: python build_aws.py
    
    - name: Create ZIP package
      run: python package_aws.py
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: aws-app-windows
        path: AWS_Data_Curator_windows_v*.zip
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r aws/requirements.txt
        pip install pyinstaller
    
    - name: Build AWS app
      run: python build_aws.py
    
    - name: Create ZIP package
      run: python package_aws.py
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: aws-app-macos
        path: AWS_Data_Curator_macos_v*.zip
        retention-days: 30

  # 릴리즈 시에만 실행되는 배포 작업
  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: aws-app-windows
        path: ./windows-artifacts
    
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: aws-app-macos
        path: ./macos-artifacts
    
    - name: Create release assets
      run: |
        mkdir -p release-assets
        cp ./windows-artifacts/*.zip ./release-assets/
        cp ./macos-artifacts/*.zip ./release-assets/
    
    - name: Upload to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release-assets/AWS_Data_Curator_windows_v*.zip
        asset_name: AWS_Data_Curator_windows.zip
        asset_content_type: application/zip
    
    - name: Upload macOS to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release-assets/AWS_Data_Curator_macos_v*.zip
        asset_name: AWS_Data_Curator_macos.zip
        asset_content_type: application/zip
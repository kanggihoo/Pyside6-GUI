name: Build AWS Data Curator

on:
  push:
    branches: [ main] # main 또는 dev/boto3 브랜치에서 푸시될 때 

jobs:
  build-windows: # build-windows 라는 이름의 작업 정의 
    runs-on: windows-latest # windows-latest 환경에서 실행 
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # github 저장소의 코드를 복사 
    
    - name: Set up Python 
      uses: actions/setup-python@v5 # python 환경 설치 액션
      with:
        python-version: '3.12' # python 3.12 버전 설치 
    
    - name: Install dependencies # 의존성 설치 
      run: |
        python -m pip install --upgrade pip
        pip install -r aws/requirements.txt
    
    - name: List files before build # 빌드 전 aws_app.spec 파일 존재 확인 
      run: |
        if (Test-Path "aws_app.spec") { echo "YES" } else { echo "NO" }
    
    - name: Build AWS app
      run: python build_aws.py
    
    - name: List files after build
      run: |
        echo "Files after build:"
        dir
        echo "dist directory contents:" 
        # dist 디렉토리 존재 확인 , dist/AWS_Data_Curator.exe 파일 존재 확인 , dist/AWS_Data_Curator 디렉토리 존재 확인 
        if (Test-Path "dist") { 
          dir dist 
          echo "dist/AWS_Data_Curator.exe exists:"
          if (Test-Path "dist/AWS_Data_Curator.exe") { echo "YES" } else { echo "NO" }
          echo "dist/AWS_Data_Curator directory exists:"
          if (Test-Path "dist/AWS_Data_Curator") { echo "YES" } else { echo "NO" }
        } else { 
          echo "dist directory not found" 
        }
        echo "build directory contents:"
        if (Test-Path "build") { dir build } else { echo "build directory not found" }

    - name: Create ZIP package
      run: python package_aws.py
    
    - name: Upload Windows artifact # 빌드된 zip 파일을 github actions의 Artifact 영역에 업ㄹ도드 
      uses: actions/upload-artifact@v4 
      with:
        name: aws-app-windows
        path: AWS_Data_Curator_windows_v*.zip
        retention-days: 30

  build-macos: # build-macos 라는 이름의 작업 정의 
    runs-on: macos-latest # macos-latest 환경에서 실행 
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r aws/requirements.txt
        pip install pyinstaller
    
    - name: Build AWS app
      run: python build_aws.py
    
    - name: Create ZIP package
      run: python package_aws.py
    
    - name: Upload macOS artifact # 빌드된 zip 파일을 github actions의 Artifact 영역에 업로드 
      uses: actions/upload-artifact@v4
      with:
        name: aws-app-macos
        path: AWS_Data_Curator_macos_v*.zip
        retention-days: 30


